# Steps:
# 1. Having relevant diff file using Danysi's method
# 2. Keep it in a temp file (which we will delete at the end)/ Load to memory
# 3. Parse .py files with lines from that file
# 4. Parse TODOs files with lines from that file
# 5. have a dict/list of file to a list of its TODOs
# 6. decide about output (talk to Danny)
# 7. Check if/how can we make pycharm links/ other convenient way for working with that


import commands


def get_file_to_todos_dict(input_file_name):
    status, output = commands.getstatusoutput("""grep -E '\+.*TODO|\+\+\+.*\.py'""" + " " + input_file_name)    # TODO: We might not need the -n anymore
    files_and_todos_list = output.splitlines()
    line_cursor = 0
    todos_list = []
    file_name_to_todos = dict()  # TODO- change to something more efficient
    file_name = None
    while line_cursor < len(files_and_todos_list):
        line = files_and_todos_list[line_cursor]
        line_cursor += 1
        if line.find("TODO") != -1:
            todos_list.append(line)
            continue
        if line[-3:] == ".py":
            # closing last file:
            if file_name and len(todos_list):
                file_name_to_todos[file_name] = todos_list
            file_name = line.split("/", 1)[1]
            todos_list = []
    return file_name_to_todos


def display_files_to_todos(file_name_to_todos):
    for k,v in file_name_to_todos.iteritems():
        print("file: {}, \nTODOs: {}".format(k, v))
